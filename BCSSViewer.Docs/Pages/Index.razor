@page "/"
@inject BcssService Bc
@inject NavigationManager NavigationManager

<MudContainer Class="@Bc["h-93vh d-flex flex-column justify-center align-center"]">
    <div class="d-flex justify-center">
        <MudText Class="text-move" Style="font-weight:900; user-select: none; cursor: default" Typo="Typo.h3" Color="Color.Default">Blazor-</MudText>
        <MudText Class="text-wrap" Style="font-weight:900; user-select: none; cursor: default" Inline="true" Typo="Typo.h3" Color="Color.Default">CSS</MudText>
    </div>

    <MudText Class="mt-8" Align="Align.Center" Typo="Typo.h3" Color="Color.Secondary"
             Style="font-weight:900; stroke-width: 2px; background-image: linear-gradient(143deg, var(--mud-palette-primary),  #f45b69, #eef4d4); -webkit-background-clip: text; -webkit-text-fill-color: transparent;">Revolutionary Runtime</MudText>
    <MudText Class="" Typo="Typo.h3" Color="Color.Primary" Style="font-weight:900;">CSS Generator</MudText>

    <MudText Typo="Typo.h6">by CodeBeam</MudText>


    <MudButton Class="mt-8" Variant="Variant.Outlined" Color="Color.Primary" Href="/gettingstarted/what">GET STARTED</MudButton>
</MudContainer>

<MudContainer Class="@Bc["hmin-60vh"]">
    <MudGrid Class="justify-center">
        <MudItem xs="12" sm="6" md="4">
            <BcssCard Icon="@Icons.Material.Filled.Public" Header="OpenSource" Description="BCSS is open source and free forever with MIT license." />
        </MudItem>
        <MudItem xs="12" sm="6" md="4">
            <BcssCard Icon="@Icons.Material.Filled.Assistant" Header="Dynamic" Description="All content can be created and changed on runtime." />
        </MudItem>
        <MudItem xs="12" sm="6" md="4">
            <BcssCard Icon="@Icons.Material.Filled.Pages" Header="Lightweight & Optimized" Description="Not allowed any repeated values and unnecessary render cycles for the best performance." />
        </MudItem>
        <MudItem xs="12" sm="6" md="4">
            <BcssCard Icon="@Icons.Material.Filled.AutoStories" Header="Smart Usage" Description="Easy to learn and use. Does not require advanced CSS knowledge." />
        </MudItem>
        <MudItem xs="12" sm="6" md="4">
            <BcssCard Icon="@Icons.Material.Filled.MobileFriendly" Header="Mobile Friendly" Description="Suits for responsive design." />
        </MudItem>
        <MudItem xs="12" sm="6" md="4">
            <BcssCard Icon="@Icons.Material.Filled.Code" Header="Complete C#" Description="Not needed to work any js, css or scss content files. Possible to work with C# variables." />
        </MudItem>
        <MudItem xs="12" sm="6" md="4">
            <BcssCard Icon="@Icons.Material.Filled.Speed" Header="Rapid Development" Description="One of the best ways to make and stabile your application quickly." />
        </MudItem>
    </MudGrid>

</MudContainer>

<MudContainer Class="@Bc["hmin-80vh mt-32"]">
    <MudText Typo="Typo.h4" Color="Color.Primary">PlayGround</MudText>
    <MudText Typo="Typo.body1">Try the BCSS abilities and re-style the box. Don't be shy to click!</MudText>


    <MudGrid Class="@Bc["mud-width-full mud-height-full mt-32"]">
        <MudItem xs="12" sm="12" Class="d-flex flex-column align-center justify-center mud-width-full">
            <MudTextFieldExtended Class="@Bc["w-full"]" @bind-Value="_cssString" Lines="2" Variant="Variant.Outlined" Label="Bcss Class" Immediate="true" spellcheck="false">
                <AdornmentEnd>
                    <MudTooltip Text="Generate" Delay="300" ShowOnFocus="false" ShowOnClick="false">
                        <MudIconButton Icon="@Icons.Material.Filled.Loop" OnClick="Generate" />
                    </MudTooltip>
                </AdornmentEnd>
            </MudTextFieldExtended>
        </MudItem>
        <MudItem xs="12" sm="12" Class="d-flex align-center justify-center">
            <MudPaper Class="@Bc[_cssString + " d-flex align-center justify-center pa-4 transition--all*1s"]" Width="200px" Height="200px" tabindex="1" @onclick="Generate">
                <MudText Align="Align.Center"><b>@_playgroundText</b></MudText>
            </MudPaper>
        </MudItem>
    </MudGrid>
</MudContainer>

<MudContainer Class="@Bc["hmin-60vh d-flex flex-column align-center justify-start"]">
    <MudText Typo="Typo.h3" Align="Align.Center" Color="Color.Primary">Like <MudText Inline="true" Typo="Typo.h3" Align="Align.Center" Color="Color.Secondary">It?</MudText></MudText>
    <MudText>Learn the Fundamentals</MudText>
    <div class="mud-width-full d-flex flex-wrap justify-center gap-4 mt-8">
        <MudButton Href="/syntax/basics" Variant="Variant.Outlined">Syntax</MudButton>
        <MudButton Href="/content" Variant="Variant.Outlined">Content</MudButton>
    </div>
</MudContainer>

@code {
    string _cssString = "";
    string[] _possibleWidth = new string[] { "w-100", "w-125", "w-150", "w-175", "w-200", "w-225", "w-250", "w-275", "w-300" };
    string[] _possibleHeight = new string[] { "h-100", "h-125", "h-150", "h-175", "h-200", "h-225", "h-250", "h-275", "h-300" };
    string[] _possibleColors = new string[] { "bg-purple", "bg-blue", "bg-red", "bg-green", "bg-purple", "bg-pink", "bg-teal", "bg-orange", "bg-[#123456]", "bg-[#efefef]" };
    string[] _possibleRounded = new string[] { "r-0", "r-20", "r-50", "r-50%", "r-100%" };
    string[] _possibleBorders = new string[] { "", "b--8px-solid-yellow", "b--8px-dotted-yellow", "b--4px-dashed-yellow", "b--8px-solid-cyan", "b--8px-dotted-cyan" };
    string[] _possibleCursor = new string[] { "cursor-default", "cursor-pointer", "cursor-progress", "cursor--not-allowed", "cursor-move", "cursor-help" };
    string[] _possibleShadow = new string[] { "", "box-shadow--5px*5px*5px*black", "box-shadow--5px*-5px*10px*black", "box-shadow---5px*5px*20px*black" };
    string _playgroundText = "Click On Me!";

    private void Generate()
    {
        Random rnd = new();
        int val = rnd.Next(0, 9);
        _cssString = _possibleWidth[val];
        val = rnd.Next(0, 9);
        _cssString += $" {_possibleHeight[val]}";
        val = rnd.Next(0, 10);
        _cssString += $" {_possibleColors[val]}";
        if (val == 9 || val == 10)
        {
            _cssString += " color-black";
        }
        else
        {
            _cssString += " color-white";
        }
        val = rnd.Next(0, 5);
        _cssString += $" {_possibleRounded[val]}";
        val = rnd.Next(0, 6);
        _cssString += $" {_possibleBorders[val]}";
        val = rnd.Next(0, 6);
        _cssString += $" {_possibleCursor[val]}";
        val = rnd.Next(0, 4);
        _cssString += $" {_possibleShadow[val]}";
        _playgroundText = "One More Lucky Click!";
    }
}
